public int minCost(int n, int[] cuts) {
        List<Integer> list = new ArrayList<>();
        list.add(0);
        list.add(n);
        for (int i : cuts) {
            list.add(i);
        }
        Collections.sort(list);
        int len = list.size();
        int[][] dp = new int[len][len];
        for (int dpLen = 2; dpLen < len; dpLen++) {//枚举区间
            for (int i = 0; i + dpLen < len; i++) {//枚举左端点
                int j = i + dpLen; //右端点
                dp[i][j] = Integer.MAX_VALUE;
                //枚举最后一个分割点
                for (int k = i + 1; k < j; k++) {
                    dp[i][j] = Math.min(dp[i][j], dp[i][k] + dp[k][j] + list.get(j) - list.get(i));
                }
            }
        }
        return dp[0][len-1];
}